

module AirMonitoring {

    struct Reading {
        long time;
        long date;
        string station_name;
        long reading_value;
    };

    struct StationInfo {
        string station_name;
        string location;
        string IOR;
    };

    struct CentreInfo {
            string centre_name;
            string location;
            string IOR;
        };
    typedef sequence<Reading> readings;
     interface MonitoringStation {
         Reading reading();
         readonly attribute readings reading_log;
         void take_reading();

         void setInfo(in StationInfo info);
         StationInfo getInfo();
         void turn_on();
         void turn_off();
         void reset();
     } ;



    typedef sequence<Reading> alarms;
    typedef sequence<StationInfo> stationList;
     interface RegionalCentre {
        attribute stationList connectedDevices;
        CentreInfo centreInfo();
        void setInfo(in CentreInfo info);
        readings allReadings();
        readings readings(in string station_name);
        alarms alarms();
        void registerMonitoringStation(in StationInfo info);

     };
     typedef sequence<CentreInfo> centreList;
     interface EnvironmentalCentre {
        readings readings();
        attribute centreList connectedCentres;
        void registerRegionalCentre(in CentreInfo info);
     };



};

