package AirMonitoring;


/**
* AirMonitoring/EnvironmentalCentrePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from AirMonitoring.idl
* Tuesday, 10 April 2018 13:29:09 o'clock BST
*/

public abstract class EnvironmentalCentrePOA extends org.omg.PortableServer.Servant
 implements AirMonitoring.EnvironmentalCentreOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("readings", new java.lang.Integer (0));
    _methods.put ("_get_connectedCentres", new java.lang.Integer (1));
    _methods.put ("_set_connectedCentres", new java.lang.Integer (2));
    _methods.put ("registerRegionalCentre", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // AirMonitoring/EnvironmentalCentre/readings
       {
         AirMonitoring.Reading $result[] = null;
         $result = this.readings ();
         out = $rh.createReply();
         AirMonitoring.readingsHelper.write (out, $result);
         break;
       }

       case 1:  // AirMonitoring/EnvironmentalCentre/_get_connectedCentres
       {
         AirMonitoring.CentreInfo $result[] = null;
         $result = this.connectedCentres ();
         out = $rh.createReply();
         AirMonitoring.centreListHelper.write (out, $result);
         break;
       }

       case 2:  // AirMonitoring/EnvironmentalCentre/_set_connectedCentres
       {
         AirMonitoring.CentreInfo newConnectedCentres[] = AirMonitoring.centreListHelper.read (in);
         this.connectedCentres (newConnectedCentres);
         out = $rh.createReply();
         break;
       }

       case 3:  // AirMonitoring/EnvironmentalCentre/registerRegionalCentre
       {
         AirMonitoring.CentreInfo info = AirMonitoring.CentreInfoHelper.read (in);
         this.registerRegionalCentre (info);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:AirMonitoring/EnvironmentalCentre:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public EnvironmentalCentre _this() 
  {
    return EnvironmentalCentreHelper.narrow(
    super._this_object());
  }

  public EnvironmentalCentre _this(org.omg.CORBA.ORB orb) 
  {
    return EnvironmentalCentreHelper.narrow(
    super._this_object(orb));
  }


} // class EnvironmentalCentrePOA
